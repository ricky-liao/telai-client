{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rickyliao/Desktop/socketChat/realtime-chat-socketio/web/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nconst socket = io.connect(\"http://localhost:4000/\"); // ... (existing imports)\n// ... (existing imports)\n\nconst GameComponent = ({\n  onSubmit,\n  onAllResponsesSubmitted,\n  gameState,\n  name\n}) => {\n  _s();\n\n  var _Object$values$find;\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [currentPhase, setCurrentPhase] = useState(\"viewImage\");\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onSubmitClick = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n    setIsSubmitted(true);\n  };\n\n  const onContinueClick = () => {\n    setIsSubmitted(false);\n    setCurrentPhase(\"viewImage\");\n  };\n\n  const onGuessSubmit = e => {\n    e.preventDefault();\n    const {\n      name\n    } = gameState; // Assuming the name is available in gameState\n\n    onAllGuessesSubmitted(name, inputValue);\n    setInputValue(\"\");\n    setCurrentPhase(\"viewImage\");\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      onAllResponsesSubmitted();\n      setCurrentPhase(\"inputGuess\");\n    }\n  }, [isSubmitted, onAllResponsesSubmitted]);\n  useEffect(() => {\n    if (currentPhase === \"inputGuess\") {\n      // Logic to handle the guessing phase\n      // For simplicity, we assume each client gets 10 seconds to guess, adjust as needed\n      const guessTimer = setTimeout(() => {\n        onGuessSubmit({\n          preventDefault: () => {}\n        }); // Automatically submit a guess when the timer expires\n      }, 10000); // 10 seconds in milliseconds\n\n      return () => clearTimeout(guessTimer); // Clear the timer on component unmount\n    }\n  }, [currentPhase, onGuessSubmit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !gameState.imageUrls ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isSubmitted ? \"Waiting for Others...\" : \"New Game Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your response has been submitted. Waiting for others...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitClick,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"gameInput\",\n          onChange: onInputChange,\n          value: inputValue,\n          label: \"Enter Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPhase === \"viewImage\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"200px\",\n          height: \"200px\",\n          src: (_Object$values$find = Object.values(gameState.imageUrls).find(img => img.name === name)) === null || _Object$values$find === void 0 ? void 0 : _Object$values$find.imageUrl,\n          alt: `${name}'s generated image`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onContinueClick,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), currentPhase === \"inputGuess\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the previous prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onGuessSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"guessInput\",\n            onChange: e => setInputValue(e.target.value),\n            value: inputValue,\n            label: \"Your Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameComponent, \"ZAxK6UaMfp9srC6CgVfCloYkL2Q=\");\n\n_c = GameComponent;\n\nconst App = () => {\n  _s2();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\",\n    roomCode: \"\",\n    gameStarted: false,\n    canJoinRoom: true\n  });\n  const [chat, setChat] = useState([]);\n  const [roomUsers, setRoomUsers] = useState([]);\n  const [showGameComponent, setShowGameComponent] = useState(false);\n  const [allResponsesSubmitted, setAllResponsesSubmitted] = useState(false);\n  const [gameState, setGameState] = useState([]);\n  useEffect(() => {\n    socket.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    socket.on(\"roomUsers\", users => {\n      setRoomUsers(users);\n    });\n    socket.on(\"alert\", message => {\n      alert(message);\n      setState({ ...state,\n        canJoinRoom: true\n      }); // Add a delay before allowing the user to join again\n\n      setTimeout(() => {\n        setState({ ...state,\n          canJoinRoom: true\n        });\n      }, 3000);\n    });\n    socket.on(\"startGame\", () => {\n      setState({ ...state,\n        gameStarted: true\n      });\n      setShowGameComponent(true);\n    });\n    socket.on(\"allResponsesSubmitted\", gameState => {\n      setAllResponsesSubmitted(true);\n      setGameState(gameState);\n    });\n  }, [chat, state]);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit(\"message\", {\n      name,\n      message\n    });\n    setState({ ...state,\n      message: \"\"\n    });\n  };\n\n  const onJoinRoom = e => {\n    e.preventDefault();\n    const {\n      name,\n      roomCode,\n      gameStarted,\n      canJoinRoom\n    } = state;\n\n    if (!gameStarted && canJoinRoom) {\n      socket.emit(\"joinRoom\", {\n        name,\n        roomCode\n      });\n      setState({ ...state,\n        canJoinRoom: false\n      });\n    }\n  };\n\n  const onStartGame = () => {\n    const {\n      roomCode\n    } = state;\n    socket.emit(\"startGame\", roomCode);\n    setState({ ...state,\n      gameStarted: true\n    });\n  };\n\n  const onGameComponentSubmit = inputValue => {\n    // Handle the submission of the game component input\n    socket.emit(\"submitResponse\", {\n      name: state.name,\n      response: inputValue\n    });\n  };\n\n  const onAllResponsesSubmitted = () => {\n    // This function is called when all users have submitted their responses\n    console.log(\"All responses submitted!\");\n    setAllResponsesSubmitted(true);\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this));\n  };\n\n  const renderRoomUsers = () => {\n    return roomUsers.map(({\n      id,\n      name\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [name, \" (ID: \", id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [!showGameComponent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onJoinRoom,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            onChange: e => onTextChange(e),\n            value: state.name,\n            label: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"roomCode\",\n            onChange: e => onTextChange(e),\n            value: state.roomCode,\n            label: \"Room Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: state.gameStarted || !state.canJoinRoom,\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStartGame,\n        disabled: state.gameStarted,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameComponent, {\n      onSubmit: onGameComponentSubmit,\n      onAllResponsesSubmitted: onAllResponsesSubmitted,\n      gameState: gameState,\n      name: state.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Room Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), renderRoomUsers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"4Mz94l7dN+NpUX0+IsNR05EwQHo=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/rickyliao/Desktop/socketChat/realtime-chat-socketio/web/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","GameComponent","onSubmit","onAllResponsesSubmitted","gameState","name","inputValue","setInputValue","isSubmitted","setIsSubmitted","currentPhase","setCurrentPhase","onInputChange","e","target","value","onSubmitClick","preventDefault","onContinueClick","onGuessSubmit","onAllGuessesSubmitted","guessTimer","setTimeout","clearTimeout","imageUrls","Object","values","find","img","imageUrl","App","state","setState","message","roomCode","gameStarted","canJoinRoom","chat","setChat","roomUsers","setRoomUsers","showGameComponent","setShowGameComponent","allResponsesSubmitted","setAllResponsesSubmitted","setGameState","on","users","alert","onTextChange","onMessageSubmit","emit","onJoinRoom","onStartGame","onGameComponentSubmit","response","console","log","renderChat","map","index","renderRoomUsers","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000/\");\n// ... (existing imports)\n\n// ... (existing imports)\n\nconst GameComponent = ({ onSubmit, onAllResponsesSubmitted, gameState, name }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [currentPhase, setCurrentPhase] = useState(\"viewImage\");\n\n  const onInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const onSubmitClick = (e) => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n    setIsSubmitted(true);\n  };\n\n  const onContinueClick = () => {\n    setIsSubmitted(false);\n    setCurrentPhase(\"viewImage\");\n  };\n\n  const onGuessSubmit = (e) => {\n    e.preventDefault();\n    const { name } = gameState; // Assuming the name is available in gameState\n    onAllGuessesSubmitted(name, inputValue);\n    setInputValue(\"\");\n    setCurrentPhase(\"viewImage\");\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      onAllResponsesSubmitted();\n      setCurrentPhase(\"inputGuess\");\n    }\n  }, [isSubmitted, onAllResponsesSubmitted]);\n\n  useEffect(() => {\n    if (currentPhase === \"inputGuess\") {\n      // Logic to handle the guessing phase\n      // For simplicity, we assume each client gets 10 seconds to guess, adjust as needed\n      const guessTimer = setTimeout(() => {\n        onGuessSubmit({ preventDefault: () => {} }); // Automatically submit a guess when the timer expires\n      }, 10000); // 10 seconds in milliseconds\n\n      return () => clearTimeout(guessTimer); // Clear the timer on component unmount\n    }\n  }, [currentPhase, onGuessSubmit]);\n\n  return (\n    <div>\n      {!gameState.imageUrls ? (\n        <div>\n          <h1>{isSubmitted ? \"Waiting for Others...\" : \"New Game Component\"}</h1>\n          {isSubmitted ? (\n            <p>Your response has been submitted. Waiting for others...</p>\n          ) : (\n            <form onSubmit={onSubmitClick}>\n              <TextField\n                name=\"gameInput\"\n                onChange={onInputChange}\n                value={inputValue}\n                label=\"Enter Something\"\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n          )}\n        </div>\n      ) : (\n        <div>\n          {currentPhase === \"viewImage\" && (\n            <div>\n              <img\n                width=\"200px\"\n                height=\"200px\"\n                src={Object.values(gameState.imageUrls)\n                  .find((img) => img.name === name)?.imageUrl}\n                alt={`${name}'s generated image`}\n              />\n              <button onClick={onContinueClick}>Continue</button>\n            </div>\n          )}\n          {currentPhase === \"inputGuess\" && (\n            <div>\n              <p>Guess the previous prompt:</p>\n              <form onSubmit={onGuessSubmit}>\n                <TextField\n                  name=\"guessInput\"\n                  onChange={(e) => setInputValue(e.target.value)}\n                  value={inputValue}\n                  label=\"Your Guess\"\n                />\n                <button type=\"submit\">Submit Guess</button>\n              </form>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nconst App = () => {\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\",\n    roomCode: \"\",\n    gameStarted: false,\n    canJoinRoom: true,\n  });\n  const [chat, setChat] = useState([]);\n  const [roomUsers, setRoomUsers] = useState([]);\n  const [showGameComponent, setShowGameComponent] = useState(false);\n  const [allResponsesSubmitted, setAllResponsesSubmitted] = useState(false);\n  const [gameState, setGameState] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"message\", ({ name, message }) => {\n      setChat([...chat, { name, message }]);\n    });\n\n    socket.on(\"roomUsers\", (users) => {\n      setRoomUsers(users);\n    });\n\n    socket.on(\"alert\", (message) => {\n      alert(message);\n      setState({ ...state, canJoinRoom: true });\n\n      // Add a delay before allowing the user to join again\n      setTimeout(() => {\n        setState({ ...state, canJoinRoom: true });\n      }, 3000);\n    });\n\n    socket.on(\"startGame\", () => {\n      setState({ ...state, gameStarted: true });\n      setShowGameComponent(true);\n    });\n\n    socket.on(\"allResponsesSubmitted\", (gameState) => {\n      setAllResponsesSubmitted(true);\n      setGameState(gameState);\n    });\n  }, [chat, state]);\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { name, message } = state;\n    socket.emit(\"message\", { name, message });\n    setState({ ...state, message: \"\" });\n  };\n\n  const onJoinRoom = (e) => {\n    e.preventDefault();\n    const { name, roomCode, gameStarted, canJoinRoom } = state;\n\n    if (!gameStarted && canJoinRoom) {\n      socket.emit(\"joinRoom\", { name, roomCode });\n      setState({ ...state, canJoinRoom: false });\n    }\n  };\n\n  const onStartGame = () => {\n    const { roomCode } = state;\n    socket.emit(\"startGame\", roomCode);\n    setState({ ...state, gameStarted: true });\n  };\n\n  const onGameComponentSubmit = (inputValue) => {\n    // Handle the submission of the game component input\n    socket.emit(\"submitResponse\", { name: state.name, response: inputValue });\n  };\n\n  const onAllResponsesSubmitted = () => {\n    // This function is called when all users have submitted their responses\n    console.log(\"All responses submitted!\");\n    setAllResponsesSubmitted(true);\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  const renderRoomUsers = () => {\n    return roomUsers.map(({ id, name }, index) => (\n      <div key={index}>\n        <p>{name} (ID: {id})</p>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      {!showGameComponent ? (\n        <div>\n          <form onSubmit={onJoinRoom}>\n            <h1>Join Room</h1>\n            <div className=\"name-field\">\n              <TextField\n                name=\"name\"\n                onChange={(e) => onTextChange(e)}\n                value={state.name}\n                label=\"Your Name\"\n              />\n            </div>\n            <div className=\"name-field\">\n              <TextField\n                name=\"roomCode\"\n                onChange={(e) => onTextChange(e)}\n                value={state.roomCode}\n                label=\"Room Code\"\n              />\n            </div>\n            <button disabled={state.gameStarted || !state.canJoinRoom}>Join Room</button>\n          </form>\n          <button onClick={onStartGame} disabled={state.gameStarted}>\n            Start Game\n          </button>\n        </div>\n      ) : (\n        <GameComponent\n          onSubmit={onGameComponentSubmit}\n          onAllResponsesSubmitted={onAllResponsesSubmitted}\n          gameState={gameState}\n          name={state.name}\n        />\n      )}\n      <form onSubmit={onMessageSubmit}>\n        {/* ... existing code */}\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n      <div className=\"room-users\">\n        <h1>Room Users</h1>\n        {renderRoomUsers()}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}