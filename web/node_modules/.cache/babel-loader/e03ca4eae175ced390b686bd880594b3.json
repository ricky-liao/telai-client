{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rickyliao/Desktop/socketChat/telai/web/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nconst socket = io.connect(\"http://localhost:4000/\"); // ... (existing imports)\n// ... (existing imports)\n\nconst GameComponent = ({\n  onSubmit,\n  onAllResponsesSubmitted,\n  gameState,\n  name,\n  onNextImage\n}) => {\n  _s();\n\n  var _Object$values$find;\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isGuessing, setIsGuessing] = useState(false);\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onSubmitClick = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n    setIsSubmitted(true);\n  };\n\n  const onGuessSubmit = e => {\n    e.preventDefault();\n    onNextImage(name, inputValue); // Send the guess to the server\n\n    setInputValue(\"\");\n    setIsGuessing(false);\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      onAllResponsesSubmitted();\n    }\n  }, [isSubmitted, onAllResponsesSubmitted]);\n  useEffect(() => {\n    if (isGuessing) {\n      // Logic to handle the guessing phase\n      // For simplicity, we assume each client gets 10 seconds to guess, adjust as needed\n      const guessTimer = setTimeout(() => {\n        onGuessSubmit({\n          preventDefault: () => {}\n        }); // Automatically submit a guess when the timer expires\n      }, 10000); // 10 seconds in milliseconds\n\n      return () => clearTimeout(guessTimer); // Clear the timer on component unmount\n    }\n  }, [isGuessing, onGuessSubmit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !gameState.imageUrls ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isSubmitted ? \"Waiting for Others...\" : \"New Game Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your response has been submitted. Waiting for others...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitClick,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"gameInput\",\n          onChange: onInputChange,\n          value: inputValue,\n          label: \"Enter Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isGuessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the previous prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onGuessSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"guessInput\",\n            onChange: e => setInputValue(e.target.value),\n            value: inputValue,\n            label: \"Your Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"View the next person's image and input your guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsGuessing(true),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"200px\",\n        height: \"200px\",\n        src: (_Object$values$find = Object.values(gameState.imageUrls).find(img => img.name === name)) === null || _Object$values$find === void 0 ? void 0 : _Object$values$find.imageUrl,\n        alt: `${name}'s generated image`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameComponent, \"6pyJUV4bOgRC1j3EwP6EUk1G1CA=\");\n\n_c = GameComponent;\n\nconst App = () => {\n  _s2();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\",\n    roomCode: \"\",\n    gameStarted: false,\n    canJoinRoom: true\n  });\n  const [chat, setChat] = useState([]);\n  const [roomUsers, setRoomUsers] = useState([]);\n  const [showGameComponent, setShowGameComponent] = useState(false);\n  const [allResponsesSubmitted, setAllResponsesSubmitted] = useState(false);\n  const [gameState, setGameState] = useState([]);\n  const [roundIndex, setRoundIndex] = useState(0);\n  const [allGuesses, setAllGuesses] = useState([]);\n  useEffect(() => {\n    // Listen for guesses from other players\n    socket.on(\"playerGuess\", ({\n      name,\n      guess\n    }) => {\n      setAllGuesses(prevGuesses => [...prevGuesses, {\n        name,\n        guess\n      }]);\n    });\n  }, []);\n\n  const onNextImage = (name, guess) => {\n    // Send the guess to the server\n    socket.emit(\"submitGuess\", {\n      name,\n      guess\n    }); // Move to the next person's image\n\n    setRoundIndex(prevIndex => prevIndex + 1); // Check if all players have guessed for this round\n\n    if (roundIndex === gameState.responses.length - 1) {\n      // Logic to end the game or start a new round\n      console.log(\"All players have guessed for this round\");\n      setAllGuesses([]); // Clear the guesses for the next round\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    socket.on(\"roomUsers\", users => {\n      setRoomUsers(users);\n    });\n    socket.on(\"alert\", message => {\n      alert(message);\n      setState({ ...state,\n        canJoinRoom: true\n      }); // Add a delay before allowing the user to join again\n\n      setTimeout(() => {\n        setState({ ...state,\n          canJoinRoom: true\n        });\n      }, 3000);\n    });\n    socket.on(\"startGame\", () => {\n      setState({ ...state,\n        gameStarted: true\n      });\n      setShowGameComponent(true);\n    });\n    socket.on(\"allResponsesSubmitted\", gameState => {\n      setAllResponsesSubmitted(true);\n      setGameState(gameState);\n    });\n  }, [chat, state]);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit(\"message\", {\n      name,\n      message\n    });\n    setState({ ...state,\n      message: \"\"\n    });\n  };\n\n  const onJoinRoom = e => {\n    e.preventDefault();\n    const {\n      name,\n      roomCode,\n      gameStarted,\n      canJoinRoom\n    } = state;\n\n    if (!gameStarted && canJoinRoom) {\n      socket.emit(\"joinRoom\", {\n        name,\n        roomCode\n      });\n      setState({ ...state,\n        canJoinRoom: false\n      });\n    }\n  };\n\n  const onStartGame = () => {\n    const {\n      roomCode\n    } = state;\n    socket.emit(\"startGame\", roomCode);\n    setState({ ...state,\n      gameStarted: true\n    });\n  };\n\n  const onGameComponentSubmit = inputValue => {\n    // Handle the submission of the game component input\n    socket.emit(\"submitResponse\", {\n      name: state.name,\n      response: inputValue\n    });\n  };\n\n  const onAllResponsesSubmitted = () => {\n    // This function is called when all users have submitted their responses\n    console.log(\"All responses submitted!\");\n    setAllResponsesSubmitted(true);\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this));\n  };\n\n  const renderRoomUsers = () => {\n    return roomUsers.map(({\n      id,\n      name\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [name, \" (ID: \", id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [!showGameComponent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onJoinRoom,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            onChange: e => onTextChange(e),\n            value: state.name,\n            label: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"roomCode\",\n            onChange: e => onTextChange(e),\n            value: state.roomCode,\n            label: \"Room Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: state.gameStarted || !state.canJoinRoom,\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStartGame,\n        disabled: state.gameStarted,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameComponent, {\n      onSubmit: onGameComponentSubmit,\n      onAllResponsesSubmitted: onAllResponsesSubmitted,\n      gameState: gameState,\n      name: state.name,\n      onNextImage: onNextImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Room Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), renderRoomUsers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"zQ0lKf9Gh6IRA7ZGX6VApsCix/I=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/rickyliao/Desktop/socketChat/telai/web/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","GameComponent","onSubmit","onAllResponsesSubmitted","gameState","name","onNextImage","inputValue","setInputValue","isSubmitted","setIsSubmitted","isGuessing","setIsGuessing","onInputChange","e","target","value","onSubmitClick","preventDefault","onGuessSubmit","guessTimer","setTimeout","clearTimeout","imageUrls","Object","values","find","img","imageUrl","App","state","setState","message","roomCode","gameStarted","canJoinRoom","chat","setChat","roomUsers","setRoomUsers","showGameComponent","setShowGameComponent","allResponsesSubmitted","setAllResponsesSubmitted","setGameState","roundIndex","setRoundIndex","allGuesses","setAllGuesses","on","guess","prevGuesses","emit","prevIndex","responses","length","console","log","users","alert","onTextChange","onMessageSubmit","onJoinRoom","onStartGame","onGameComponentSubmit","response","renderChat","map","index","renderRoomUsers","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000/\");\n// ... (existing imports)\n\n// ... (existing imports)\n\nconst GameComponent = ({ onSubmit, onAllResponsesSubmitted, gameState, name, onNextImage }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isGuessing, setIsGuessing] = useState(false);\n\n  const onInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const onSubmitClick = (e) => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n    setIsSubmitted(true);\n  };\n\n  const onGuessSubmit = (e) => {\n    e.preventDefault();\n    onNextImage(name, inputValue); // Send the guess to the server\n    setInputValue(\"\");\n    setIsGuessing(false);\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      onAllResponsesSubmitted();\n    }\n  }, [isSubmitted, onAllResponsesSubmitted]);\n\n  useEffect(() => {\n    if (isGuessing) {\n      // Logic to handle the guessing phase\n      // For simplicity, we assume each client gets 10 seconds to guess, adjust as needed\n      const guessTimer = setTimeout(() => {\n        onGuessSubmit({ preventDefault: () => {} }); // Automatically submit a guess when the timer expires\n      }, 10000); // 10 seconds in milliseconds\n\n      return () => clearTimeout(guessTimer); // Clear the timer on component unmount\n    }\n  }, [isGuessing, onGuessSubmit]);\n\n  return (\n    <div>\n      {!gameState.imageUrls ? (\n        <div>\n          <h1>{isSubmitted ? \"Waiting for Others...\" : \"New Game Component\"}</h1>\n          {isSubmitted ? (\n            <p>Your response has been submitted. Waiting for others...</p>\n          ) : (\n            <form onSubmit={onSubmitClick}>\n              <TextField\n                name=\"gameInput\"\n                onChange={onInputChange}\n                value={inputValue}\n                label=\"Enter Something\"\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n          )}\n        </div>\n      ) : (\n        <div>\n          {isGuessing ? (\n            <div>\n              <p>Guess the previous prompt:</p>\n              <form onSubmit={onGuessSubmit}>\n                <TextField\n                  name=\"guessInput\"\n                  onChange={(e) => setInputValue(e.target.value)}\n                  value={inputValue}\n                  label=\"Your Guess\"\n                />\n                <button type=\"submit\">Submit Guess</button>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <p>View the next person's image and input your guess</p>\n              <button onClick={() => setIsGuessing(true)}>Continue</button>\n            </div>\n          )}\n          <img\n            width=\"200px\"\n            height=\"200px\"\n            src={Object.values(gameState.imageUrls)\n              .find((img) => img.name === name)?.imageUrl}\n            alt={`${name}'s generated image`}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nconst App = () => {\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\",\n    roomCode: \"\",\n    gameStarted: false,\n    canJoinRoom: true,\n  });\n  const [chat, setChat] = useState([]);\n  const [roomUsers, setRoomUsers] = useState([]);\n  const [showGameComponent, setShowGameComponent] = useState(false);\n  const [allResponsesSubmitted, setAllResponsesSubmitted] = useState(false);\n  const [gameState, setGameState] = useState([]);\n\n  const [roundIndex, setRoundIndex] = useState(0);\n  const [allGuesses, setAllGuesses] = useState([]);\n\n  useEffect(() => {\n    // Listen for guesses from other players\n    socket.on(\"playerGuess\", ({ name, guess }) => {\n      setAllGuesses((prevGuesses) => [...prevGuesses, { name, guess }]);\n    });\n  }, []);\n\n  const onNextImage = (name, guess) => {\n    // Send the guess to the server\n    socket.emit(\"submitGuess\", { name, guess });\n\n    // Move to the next person's image\n    setRoundIndex((prevIndex) => prevIndex + 1);\n\n    // Check if all players have guessed for this round\n    if (roundIndex === gameState.responses.length - 1) {\n      // Logic to end the game or start a new round\n      console.log(\"All players have guessed for this round\");\n      setAllGuesses([]); // Clear the guesses for the next round\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", ({ name, message }) => {\n      setChat([...chat, { name, message }]);\n    });\n\n    socket.on(\"roomUsers\", (users) => {\n      setRoomUsers(users);\n    });\n\n    socket.on(\"alert\", (message) => {\n      alert(message);\n      setState({ ...state, canJoinRoom: true });\n\n      // Add a delay before allowing the user to join again\n      setTimeout(() => {\n        setState({ ...state, canJoinRoom: true });\n      }, 3000);\n    });\n\n    socket.on(\"startGame\", () => {\n      setState({ ...state, gameStarted: true });\n      setShowGameComponent(true);\n    });\n\n    socket.on(\"allResponsesSubmitted\", (gameState) => {\n      setAllResponsesSubmitted(true);\n      setGameState(gameState);\n    });\n  }, [chat, state]);\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { name, message } = state;\n    socket.emit(\"message\", { name, message });\n    setState({ ...state, message: \"\" });\n  };\n\n  const onJoinRoom = (e) => {\n    e.preventDefault();\n    const { name, roomCode, gameStarted, canJoinRoom } = state;\n\n    if (!gameStarted && canJoinRoom) {\n      socket.emit(\"joinRoom\", { name, roomCode });\n      setState({ ...state, canJoinRoom: false });\n    }\n  };\n\n  const onStartGame = () => {\n    const { roomCode } = state;\n    socket.emit(\"startGame\", roomCode);\n    setState({ ...state, gameStarted: true });\n  };\n\n  const onGameComponentSubmit = (inputValue) => {\n    // Handle the submission of the game component input\n    socket.emit(\"submitResponse\", { name: state.name, response: inputValue });\n  };\n\n  const onAllResponsesSubmitted = () => {\n    // This function is called when all users have submitted their responses\n    console.log(\"All responses submitted!\");\n    setAllResponsesSubmitted(true);\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  const renderRoomUsers = () => {\n    return roomUsers.map(({ id, name }, index) => (\n      <div key={index}>\n        <p>{name} (ID: {id})</p>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      {!showGameComponent ? (\n        <div>\n          <form onSubmit={onJoinRoom}>\n            <h1>Join Room</h1>\n            <div className=\"name-field\">\n              <TextField\n                name=\"name\"\n                onChange={(e) => onTextChange(e)}\n                value={state.name}\n                label=\"Your Name\"\n              />\n            </div>\n            <div className=\"name-field\">\n              <TextField\n                name=\"roomCode\"\n                onChange={(e) => onTextChange(e)}\n                value={state.roomCode}\n                label=\"Room Code\"\n              />\n            </div>\n            <button disabled={state.gameStarted || !state.canJoinRoom}>Join Room</button>\n          </form>\n          <button onClick={onStartGame} disabled={state.gameStarted}>\n            Start Game\n          </button>\n        </div>\n      ) : (\n        <GameComponent\n          onSubmit={onGameComponentSubmit}\n          onAllResponsesSubmitted={onAllResponsesSubmitted}\n          gameState={gameState}\n          name={state.name}\n          onNextImage={onNextImage}\n        />\n      )}\n      <form onSubmit={onMessageSubmit}>\n        {/* ... existing code */}\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n      <div className=\"room-users\">\n        <h1>Room Users</h1>\n        {renderRoomUsers()}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}