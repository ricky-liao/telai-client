{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rickyliao/Desktop/socketChat/realtime-chat-socketio/web/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nconst socket = io.connect(\"http://localhost:4000/\"); // ... (existing imports)\n// ... (existing imports)\n\nconst GameComponent = ({\n  onSubmit,\n  onAllResponsesSubmitted,\n  gameState = {\n    responses: [],\n    imageUrls: [],\n    round: 0\n  },\n  playerName\n}) => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [shuffledResponses, setShuffledResponses] = useState([]);\n  const [currentGuessIndex, setCurrentGuessIndex] = useState(0);\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onSubmitClick = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n    setIsSubmitted(true);\n  };\n\n  const startNextRound = () => {\n    const allNamesExceptPlayer = Object.keys(gameState.responses).filter(name => name !== playerName);\n    const nextGuessIndex = (currentGuessIndex + 1) % allNamesExceptPlayer.length;\n    setCurrentGuessIndex(nextGuessIndex);\n    setShuffledResponses(allNamesExceptPlayer.slice(nextGuessIndex).concat(allNamesExceptPlayer.slice(0, nextGuessIndex)));\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      onAllResponsesSubmitted();\n    }\n  }, [isSubmitted, onAllResponsesSubmitted]);\n  useEffect(() => {\n    const handleAllResponsesSubmitted = () => {\n      // Request the updated game state from the server\n      // This assumes you have a function to request the game state from the server\n      // Make sure to replace 'fetchUpdatedGameState' with your actual function\n      fetchUpdatedGameState();\n    }; // Listen for the \"allResponsesSubmitted\" event from the server\n\n\n    socket.on(\"allResponsesSubmitted\", handleAllResponsesSubmitted);\n    return () => {\n      // Clean up the event listener when the component unmounts\n      socket.off(\"allResponsesSubmitted\", handleAllResponsesSubmitted);\n    };\n  }, []);\n  useEffect(() => {\n    // React to changes in the game state\n    if (gameState.round > 0 && gameState.round <= shuffledResponses.length) {\n      startNextRound();\n    }\n  }, [gameState.round, shuffledResponses, currentGuessIndex]); // Add a function to fetch the updated game state from the server\n\n  const fetchUpdatedGameState = () => {\n    // Assuming you have a function to emit the \"getUpdatedGameState\" event to the server\n    // Make sure to replace 'getUpdatedGameState' with your actual function\n    socket.emit(\"getUpdatedGameState\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [gameState.imageUrls, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isSubmitted ? \"Waiting for Others...\" : \"New Game Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your response has been submitted. Waiting for others...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitClick,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: \"gameInput\",\n        onChange: onInputChange,\n        value: inputValue,\n        label: \"Enter Something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), gameState.round > 0 && gameState.round <= shuffledResponses.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Round \", gameState.round]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your prompt: \", gameState.responses[playerName]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guess what this image represents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gameState.imageUrls.find(item => item.name === shuffledResponses[currentGuessIndex]).imageUrl,\n        alt: \"Prompt Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameComponent, \"HFukUcrse7Q1IcH6CQtQ1kXj97A=\");\n\n_c = GameComponent;\n\nconst App = () => {\n  _s2();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\",\n    roomCode: \"\",\n    gameStarted: false,\n    canJoinRoom: true\n  });\n  const [chat, setChat] = useState([]);\n  const [roomUsers, setRoomUsers] = useState([]);\n  const [showGameComponent, setShowGameComponent] = useState(false);\n  const [allResponsesSubmitted, setAllResponsesSubmitted] = useState(false);\n  useEffect(() => {\n    socket.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    socket.on(\"roomUsers\", users => {\n      setRoomUsers(users);\n    });\n    socket.on(\"alert\", message => {\n      alert(message);\n      setState({ ...state,\n        canJoinRoom: true\n      }); // Add a delay before allowing the user to join again\n\n      setTimeout(() => {\n        setState({ ...state,\n          canJoinRoom: true\n        });\n      }, 3000);\n    });\n    socket.on(\"startGame\", () => {\n      setState({ ...state,\n        gameStarted: true\n      });\n      setShowGameComponent(true);\n    });\n    socket.on(\"allResponsesSubmitted\", () => {\n      setAllResponsesSubmitted(true);\n    });\n  }, [chat, state]);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit(\"message\", {\n      name,\n      message\n    });\n    setState({ ...state,\n      message: \"\"\n    });\n  };\n\n  const onJoinRoom = e => {\n    e.preventDefault();\n    const {\n      name,\n      roomCode,\n      gameStarted,\n      canJoinRoom\n    } = state;\n\n    if (!gameStarted && canJoinRoom) {\n      socket.emit(\"joinRoom\", {\n        name,\n        roomCode\n      });\n      setState({ ...state,\n        canJoinRoom: false\n      });\n    }\n  };\n\n  const onStartGame = () => {\n    const {\n      roomCode\n    } = state;\n    socket.emit(\"startGame\", roomCode);\n    setState({ ...state,\n      gameStarted: true\n    });\n  };\n\n  const onGameComponentSubmit = inputValue => {\n    // Handle the submission of the game component input\n    socket.emit(\"submitResponse\", {\n      name: state.name,\n      response: inputValue\n    });\n  };\n\n  const onAllResponsesSubmitted = () => {\n    // This function is called when all users have submitted their responses\n    console.log(\"All responses submitted!\");\n    setAllResponsesSubmitted(true);\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this));\n  };\n\n  const renderRoomUsers = () => {\n    return roomUsers.map(({\n      id,\n      name\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [name, \" (ID: \", id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [!showGameComponent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onJoinRoom,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            onChange: e => onTextChange(e),\n            value: state.name,\n            label: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-field\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"roomCode\",\n            onChange: e => onTextChange(e),\n            value: state.roomCode,\n            label: \"Room Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: state.gameStarted || !state.canJoinRoom,\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStartGame,\n        disabled: state.gameStarted,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameComponent, {\n      onSubmit: onGameComponentSubmit,\n      onAllResponsesSubmitted: onAllResponsesSubmitted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Room Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), renderRoomUsers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"yNQELUFAFVaPBj4lL/tmuN0MYFk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/rickyliao/Desktop/socketChat/realtime-chat-socketio/web/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","GameComponent","onSubmit","onAllResponsesSubmitted","gameState","responses","imageUrls","round","playerName","inputValue","setInputValue","isSubmitted","setIsSubmitted","shuffledResponses","setShuffledResponses","currentGuessIndex","setCurrentGuessIndex","onInputChange","e","target","value","onSubmitClick","preventDefault","startNextRound","allNamesExceptPlayer","Object","keys","filter","name","nextGuessIndex","length","slice","concat","handleAllResponsesSubmitted","fetchUpdatedGameState","on","off","emit","find","item","imageUrl","App","state","setState","message","roomCode","gameStarted","canJoinRoom","chat","setChat","roomUsers","setRoomUsers","showGameComponent","setShowGameComponent","allResponsesSubmitted","setAllResponsesSubmitted","users","alert","setTimeout","onTextChange","onMessageSubmit","onJoinRoom","onStartGame","onGameComponentSubmit","response","console","log","renderChat","map","index","renderRoomUsers","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000/\");\n// ... (existing imports)\n\n// ... (existing imports)\n\nconst GameComponent = ({ onSubmit, onAllResponsesSubmitted, gameState = { responses: [], imageUrls: [], round: 0 }, playerName }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [shuffledResponses, setShuffledResponses] = useState([]);\n  const [currentGuessIndex, setCurrentGuessIndex] = useState(0);\n\n  const onInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const onSubmitClick = (e) => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue(\"\");\n    setIsSubmitted(true);\n  };\n\n  const startNextRound = () => {\n    const allNamesExceptPlayer = Object.keys(gameState.responses).filter(name => name !== playerName);\n    const nextGuessIndex = (currentGuessIndex + 1) % allNamesExceptPlayer.length;\n    setCurrentGuessIndex(nextGuessIndex);\n    setShuffledResponses(allNamesExceptPlayer.slice(nextGuessIndex).concat(allNamesExceptPlayer.slice(0, nextGuessIndex)));\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      onAllResponsesSubmitted();\n    }\n  }, [isSubmitted, onAllResponsesSubmitted]);\n\n  useEffect(() => {\n    const handleAllResponsesSubmitted = () => {\n      // Request the updated game state from the server\n      // This assumes you have a function to request the game state from the server\n      // Make sure to replace 'fetchUpdatedGameState' with your actual function\n      fetchUpdatedGameState();\n    };\n\n    // Listen for the \"allResponsesSubmitted\" event from the server\n    socket.on(\"allResponsesSubmitted\", handleAllResponsesSubmitted);\n\n    return () => {\n      // Clean up the event listener when the component unmounts\n      socket.off(\"allResponsesSubmitted\", handleAllResponsesSubmitted);\n    };\n  }, []);\n\n  useEffect(() => {\n    // React to changes in the game state\n    if (gameState.round > 0 && gameState.round <= shuffledResponses.length) {\n      startNextRound();\n    }\n  }, [gameState.round, shuffledResponses, currentGuessIndex]);\n\n  // Add a function to fetch the updated game state from the server\n  const fetchUpdatedGameState = () => {\n    // Assuming you have a function to emit the \"getUpdatedGameState\" event to the server\n    // Make sure to replace 'getUpdatedGameState' with your actual function\n    socket.emit(\"getUpdatedGameState\");\n  };\n\n  return (\n    <div>\n      {gameState.imageUrls}\n      <h1>{isSubmitted ? \"Waiting for Others...\" : \"New Game Component\"}</h1>\n      {isSubmitted ? (\n        <p>Your response has been submitted. Waiting for others...</p>\n      ) : (\n        <form onSubmit={onSubmitClick}>\n          <TextField\n            name=\"gameInput\"\n            onChange={onInputChange}\n            value={inputValue}\n            label=\"Enter Something\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n      {gameState.round > 0 && gameState.round <= shuffledResponses.length && (\n        <div>\n          <p>Round {gameState.round}</p>\n          <p>Your prompt: {gameState.responses[playerName]}</p>\n          <p>Guess what this image represents:</p>\n          <img src={gameState.imageUrls.find((item) => item.name === shuffledResponses[currentGuessIndex]).imageUrl} alt=\"Prompt Image\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nconst App = () => {\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\",\n    roomCode: \"\",\n    gameStarted: false,\n    canJoinRoom: true,\n  });\n  const [chat, setChat] = useState([]);\n  const [roomUsers, setRoomUsers] = useState([]);\n  const [showGameComponent, setShowGameComponent] = useState(false);\n  const [allResponsesSubmitted, setAllResponsesSubmitted] = useState(false);\n\n  useEffect(() => {\n    socket.on(\"message\", ({ name, message }) => {\n      setChat([...chat, { name, message }]);\n    });\n\n    socket.on(\"roomUsers\", (users) => {\n      setRoomUsers(users);\n    });\n\n    socket.on(\"alert\", (message) => {\n      alert(message);\n      setState({ ...state, canJoinRoom: true });\n\n      // Add a delay before allowing the user to join again\n      setTimeout(() => {\n        setState({ ...state, canJoinRoom: true });\n      }, 3000);\n    });\n\n    socket.on(\"startGame\", () => {\n      setState({ ...state, gameStarted: true });\n      setShowGameComponent(true);\n    });\n\n    socket.on(\"allResponsesSubmitted\", () => {\n      setAllResponsesSubmitted(true);\n    });\n  }, [chat, state]);\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { name, message } = state;\n    socket.emit(\"message\", { name, message });\n    setState({ ...state, message: \"\" });\n  };\n\n  const onJoinRoom = (e) => {\n    e.preventDefault();\n    const { name, roomCode, gameStarted, canJoinRoom } = state;\n\n    if (!gameStarted && canJoinRoom) {\n      socket.emit(\"joinRoom\", { name, roomCode });\n      setState({ ...state, canJoinRoom: false });\n    }\n  };\n\n  const onStartGame = () => {\n    const { roomCode } = state;\n    socket.emit(\"startGame\", roomCode);\n    setState({ ...state, gameStarted: true });\n  };\n\n  const onGameComponentSubmit = (inputValue) => {\n    // Handle the submission of the game component input\n    socket.emit(\"submitResponse\", { name: state.name, response: inputValue });\n  };\n\n  const onAllResponsesSubmitted = () => {\n    // This function is called when all users have submitted their responses\n    console.log(\"All responses submitted!\");\n    setAllResponsesSubmitted(true);\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  const renderRoomUsers = () => {\n    return roomUsers.map(({ id, name }, index) => (\n      <div key={index}>\n        <p>{name} (ID: {id})</p>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      {!showGameComponent ? (\n        <div>\n          <form onSubmit={onJoinRoom}>\n            <h1>Join Room</h1>\n            <div className=\"name-field\">\n              <TextField\n                name=\"name\"\n                onChange={(e) => onTextChange(e)}\n                value={state.name}\n                label=\"Your Name\"\n              />\n            </div>\n            <div className=\"name-field\">\n              <TextField\n                name=\"roomCode\"\n                onChange={(e) => onTextChange(e)}\n                value={state.roomCode}\n                label=\"Room Code\"\n              />\n            </div>\n            <button disabled={state.gameStarted || !state.canJoinRoom}>Join Room</button>\n          </form>\n          <button onClick={onStartGame} disabled={state.gameStarted}>\n            Start Game\n          </button>\n        </div>\n      ) : (\n        <GameComponent\n          onSubmit={onGameComponentSubmit}\n          onAllResponsesSubmitted={onAllResponsesSubmitted}\n        />\n      )}\n      <form onSubmit={onMessageSubmit}>\n        {/* ... existing code */}\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n      <div className=\"room-users\">\n        <h1>Room Users</h1>\n        {renderRoomUsers()}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}